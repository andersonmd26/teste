apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: cria-sg-crossplane
  title: Criar Security Group no Crossplane
  description: Gera um Workspace do Crossplane (OpenTofu) com AWS Security Group
spec:
  owner: DevOps
  type: configuration

parameters:
  - title: Configurações do Security Group
    required: [sgName, region, description]
    properties:
      sgName:        { type: string, title: Nome do SG, default: sg-exemplo }
      region:        { type: string, title: Região Crossplane, default: us-east-1 }
      description:   { type: string, title: Descrição, default: "Criado via Backstage" }
      ingressRules:
        type: array
        title: Regras de Ingresso
        items:
          type: object
          properties:
            fromPort:   { type: integer, title: Porta Inicial }
            toPort:     { type: integer, title: Porta Final }
            protocol:   { type: string,  title: Protocolo }
            cidrBlocks:
              type: array
              title: CIDRs
              items:
                type: string
      egressRules:
        type: array
        title: Regras de Egressão
        items:
          type: object
          properties:
            fromPort:   { type: integer, title: Porta Inicial }
            toPort:     { type: integer, title: Porta Final }
            protocol:   { type: string,  title: Protocolo }
            cidrBlocks:
              type: array
              title: CIDRs
              items:
                type: string


    # Parâmetros do Azure DevOps
    - title: Azure DevOps Repo
      required: [organization, project, repo]
      properties:
        organization: { type: string, title: Organização, default: andersonmd }
        project:      { type: string, title: Projeto,      default: backstage }
        repo:         { type: string, title: Repositório,  default: sg-crossplane4 }

  steps:
    - id: debug-vars
      name: Logar variáveis recebidas
      action: debug:log
      input:
        message: |
          sgName: ${{ parameters.sgName }}
          region: ${{ parameters.region }}
          description: ${{ parameters.description }}
          ingressRules: ${{ parameters.ingressRules }}
          egressRules: ${{ parameters.egressRules }}
  
    - id: generate
      name: Gerar workspace.yaml
      action: fetch:template
      input:
        url: ./templates/cria-sg-crossplane/workspace.yaml.njk
        targetPath: ./output
        values:
          sgName:       ${{ parameters.sgName }}
          region:       ${{ parameters.region }}
          description:  ${{ parameters.description }}
          ingressRules: ${{ parameters.ingressRules }}
          egressRules:  ${{ parameters.egressRules }}
        templateFile: workspace.yaml
  
    - id: ls
      name: Listar arquivos em ./output
      action: debug:log
      input:
        message: |
          Arquivos em ./output:
          {{ $glob('./output/*') }}
  
    - id: publish
      name: Publica no Azure DevOps
      action: publish:azure
      input:
        repoUrl:           "dev.azure.com?organization=${{parameters.organization}}&project=${{parameters.project}}&repo=${{parameters.repo}}"
        defaultBranch:     desenvolvimento
        sourcePath:        ./output
        description:       "Workspace SG ${{ parameters.sgName }}"
        gitCommitMessage:  "Add workspace.yaml via Backstage"


  output:
    links:
      - title: Ver workspace.yaml no Azure DevOps
        url: "https://dev.azure.com/${{parameters.organization}}/${{parameters.project}}/_git/${{parameters.repo}}/blob/desenvolvimento/workspace.yaml"

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: cria-sg-crossplane
  title: Criar Security Group no Crossplane
  description: Gera um Workspace do Crossplane (OpenTofu) com AWS Security Group
spec:
  owner: DevOps
  type: configuration

  parameters:
    # --- seus parâmetros de infra (sgName, region, description, ingressRules, egressRules) aqui ---
    - title: Configurações do Security Group
      required: [sgName, region, description]
      properties:
        sgName:        { type: string, title: Nome do SG, default: sg-exemplo }
        region:        { type: string, title: Região Crossplane, default: us-east-1 }
        description:   { type: string, title: Descrição, default: "Criado via Backstage" }
        ingressRules:  { type: array,  title: Regras de Ingresso, /*…*/ }
        egressRules:   { type: array,  title: Regras de Egressão, /*…*/ }

    # Parâmetros do Azure DevOps
    - title: Azure DevOps Repo
      required: [organization, project, repo]
      properties:
        organization: { type: string, title: Organização, default: andersonmd }
        project:      { type: string, title: Projeto,      default: backstage }
        repo:         { type: string, title: Repositório,  default: sg-crossplane4 }

  steps:
    - id: generate
      name: Gerar workspace.yaml
      action: fetch:template
      input:
        url: https://raw.githubusercontent.com/andersonmd26/teste/main/templates/cria-sg-crossplane/workspace.yaml.njk
        targetPath: ./output
        values:
          sgName:       ${{ parameters.sgName }}
          region:       ${{ parameters.region }}
          description:  ${{ parameters.description }}
          ingressRules: ${{ parameters.ingressRules }}
          egressRules:  ${{ parameters.egressRules }}
  
    - id: move
      name: Renomear para workspace.yaml
      action: move:directory
      input:
        files:
          - from: ./output/workspace.yaml.njk
            to:   ./output/workspace.yaml


    # 2) Cria o repo e comita todo o conteúdo de ./output nele
    - id: publish
      name: Publica no Azure DevOps
      action: publish:azure
      input:
        repoUrl:           "dev.azure.com?organization=${{parameters.organization}}&project=${{parameters.project}}&repo=${{parameters.repo}}"
        defaultBranch:     desenvolvimento
        sourcePath:        ./output
        description:       "Workspace SG ${{ parameters.sgName }}"
        gitCommitMessage:  "Add workspace.yaml via Backstage"

  output:
    links:
      - title: Ver workspace.yaml no Azure DevOps
        url: "https://dev.azure.com/${{parameters.organization}}/${{parameters.project}}/_git/${{parameters.repo}}/blob/desenvolvimento/workspace.yaml"

apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-repo-and-argocd
  title: Criar repo + ArgoCD Application
  description: Cria repositório e application no Argo CD
spec:
  owner: user:anderson
  type: service

  parameters:
    - title: Dados do repositório
      required:
        - organization
        - project
        - repo
      properties:
        organization:
          title: Organização no Azure DevOps
          type: string
          default: andersonmd
        project:
          title: Projeto no Azure DevOps
          type: string
          default: backstage
        repo:
          title: Nome do repositório
          type: string
          default: backstage_teste


  steps:
    - id: publish
      name: Publicar no Azure DevOps
      action: publish:azure
      input:
        repoUrl: "dev.azure.com?organization=${{ parameters.organization }}&project=${{ parameters.project }}&repo=${{ parameters.repo }}"
        defaultBranch: desenvolvimento
        description: Projeto gerado automaticamente via Backstage
        gitCommitMessage: "Primeiro commit pelo Backstage"


    - id: criar-argocd
      name: Criar Application no ArgoCD
      action: http:backstage
      input:
        method: POST
        url: https://argocd.amdexpert.com/api/v1/applications
        headers:
          Authorization: 'Bearer ${{ secrets.ARGOCD_AUTH_TOKEN }}'
          Content-Type: application/json
        body:
          metadata:
            name: ${{ parameters.repo }}
            namespace: argocd
          spec:
            project: default
            source:
              repoURL: "https://dev.azure.com/${{ parameters.organization }}/${{ parameters.project }}/_git/${{ parameters.repo }}"
              targetRevision: HEAD
              path: manifests
            destination:
              server: https://kubernetes.default.svc
              namespace: ${{ parameters.repo }}
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true
                - RespectIgnoreDifferences=true


    - id: registrar-no-catalogo
      name: Registrar no catálogo
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['criar-repo'].output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repositório criado
        url: ${{ steps['criar-repo'].output.remoteUrl }}
